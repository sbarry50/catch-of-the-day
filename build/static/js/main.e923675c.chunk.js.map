{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","name","price","parseFloat","status","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","Object","objectSpread","defineProperty","updateFish","index","_this2","onChange","onClick","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","console","log","signOut","onAuthStateChanged","_this3","keys","fishes","map","key","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","Order","renderOrder","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","removeFromOrder","orderIds","total","reduce","prevTotal","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.e923675c.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  goToStore = event => {\n    // 1. Stop form from submitting\n    event.preventDefault();\n    // 2. get the text from that input\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter a Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">of</span>\n        <span className=\"the\">the</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  };\n\n  createFish = event => {\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // refesh the form\n    event.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  };\n  handleChange = event => {\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          name=\"name\"\n          type=\"text\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          name=\"price\"\n          type=\"text\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          name=\"image\"\n          type=\"text\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Login with Github\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n      Login with Facebook\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n      Login with Twitter\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyBmEkyQETyMHpyrAJbXT-uV-3kZRVM49Yk\",\n  authDomain: \"catch-of-the-day-sbarry50.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-sbarry50.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// This is a default export\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    addFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    // 1. Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    // 2. Claim it if there is no owner.\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    // 3. Set the state of the inventory component to reflect the current user.\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Logging out!\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out</button>;\n    // 1. Check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2. Check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are the not owner.</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // 3. They must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\nexport default Inventory;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    order: PropTypes.object,\n    fishes: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n    // Make sure the fish is loaded before we continue\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <li key={key}>\n          Sorry {fish ? fish.name : \"fish\"} is no longer available\n        </li>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition {...transitionOptions}>\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Order;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add to Cart\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Inventory from \"./Inventory\";\nimport Order from \"./Order\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to our fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    //  3. Set the new fishes object to state\n    this.setState({\n      fishes: fishes\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = key => {\n    // 1. Take a copy of state\n    const fishes = { ...this.state.fishes };\n    // 2. update the state\n    fishes[key] = null;\n    // 3. update state\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // 1. Take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    // 1. Take a copy of state\n    const order = { ...this.state.order };\n    // 2. Remove item from order\n    delete order[key];\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!!!!!</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route exact path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}